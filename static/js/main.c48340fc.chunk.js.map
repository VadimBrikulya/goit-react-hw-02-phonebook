{"version":3,"sources":["App.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","App.js","index.js","Components/Filter/Filter.module.css"],"names":["module","exports","Filter","value","onChange","className","s","label","filterInput","placeholder","type","Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","pattern","title","required","id","style","marginTop","disabled","Component","ContactsList","contacts","onDeleteContact","map","box","btn","onClick","App","filter","formList","contact","find","cont","toLocaleLowerCase","includes","formOnSubmitHandler","console","log","alert","deleteContact","contactId","prevState","changeFilter","normalizeContacts","visibleContacts","css","ContactForm","contactBox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c48340fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3yTLA\",\"contactBox\":\"App_contactBox__3Qkag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__3WN5t\",\"box\":\"ContactList_box__2pZFg\"};","  \nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n     <input\n      className={s.filterInput}\n      placeholder=\"Find contacts by name\"\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n    state = {\n        name: '',\n        number: ''\n    };\n\n    nameInputId = shortid.generate();\n    numberInputId = shortid.generate();\n\n        handleChange = e => {\n        const {name, value} = e.currentTarget\n          this.setState({ [name]: value })\n          \n    };\n  \n        handleSubmit = e => {\n        e.preventDefault();\n          this.props.onSubmit(this.state);\n          this.reset();\n          \n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n  \n  render() {\n    \n        return (\n            <form onSubmit = {this.handleSubmit} >\n                <label htmlFor={this.nameInputId} >            \n                    Name <br/><input\n                            type=\"text\"\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                            name=\"name\"                     \n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                                required\n                                id={this.nameInputId}\n                            />\n                            \n                </label>\n                    <br/>\n                <label htmlFor={this.numberInputId}>\n                    Number <br/><input\n                            type=\"tel\"\n                            name=\"number\"\n                            value={this.state.number}\n                            onChange={this.handleChange}\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                            required\n                            id={this.numberInputId}\n                          />\n          </label>\n          <div style ={{marginTop: \"10px\"}}>\n                    <button type=\"submit\" disabled= {!this.state.name || !this.state.number}>add contact</button>\n          </div>\n        </form>\n        );\n    }\n}\n\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul  >\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.box}>\r\n          <p >            \r\n            {name}: {number}\r\n              </p>\r\n              \r\n          <button            \r\n            type=\"button\" className={s.btn}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};","import Filter from \"Components/Filter/Filter\";\nimport React, { Component } from 'react';\nimport css from \"./App.module.css\";\nimport shortid from 'shortid';\nimport ContactForm from \"Components/ContactForm/ContactForm\"\nimport ContactsList from \"Components/ContactList/ContactList\";\n\n\nclass App extends Component {\n  state = {\n  contacts: [],\n  filter: '', \n  }\n\nformList = (contact, contacts) =>\n    contacts.find(cont =>\n      cont.name.toLocaleLowerCase().includes(contact.name.toLocaleLowerCase()),\n    );\n  formOnSubmitHandler = e => {    \n    const { contacts } = this.state;\n    console.log({ contacts });\n    const contact = {\n      id: shortid(),\n      name: e.name,\n      number: e.number,\n    };\n    this.formList(contact, contacts)\n      ? alert(`${contact.name} is already in your list`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(cont => cont.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const normalizeContacts = this.state.filter.toLocaleLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizeContacts),\n    );\n    const { filter } = this.state;\n    return (\n     \n      <div>\n        <div className={css.App}>          \n          <h1>Phonebook</h1>\n\n          <ContactForm onSubmit={this.formOnSubmitHandler} />\n          </div>\n        <div className={css.contactBox}>\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter}/>\n          <ContactsList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n          </div>\n        </div>\n                     \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1Oah0\"};"],"sourceRoot":""}